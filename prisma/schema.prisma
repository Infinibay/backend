generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  password  String
  deleted   Boolean
  token     String  @default("null")
  firstName String
  lastName  String
  userImage String? @unique
  role      String
  createdAt DateTime @default(now())
  VM Machine[]
}

model Node {
  id              String @id @default(uuid())
  name            String
  currentRaid     String
  nextRaid        String?
  cpuFlags        Json
  ram             Int
  cores           Int
  disks           Disk[]
}

model Disk {
  id              String @id @default(uuid())
  path            String
  nodeId          String
  node            Node @relation(fields: [nodeId], references: [id])
  status          String
}

model Machine {
  id                 String  @id @default(uuid())
  name               String
  internalName       String
  status             String
  userId             String?
  templateId         String
  os                 String
  createdAt          DateTime @default(now())
  template           MachineTemplate @relation(fields: [templateId], references: [id])
  user               User?           @relation(fields: [userId], references: [id])
  applications       MachineApplication[]
  configuration      MachineConfiguration?
  departmentId       String?
  department         Department?     @relation(fields: [departmentId], references: [id])
}

model MachineConfiguration {
  id          String  @id @default(uuid())
  xml         Json?
  vncHost     String?
  vncPort     Int?
  vncPassword String?
  vncListen   String?
  vncAutoport Boolean?
  vncType     String?
  machineId   String  @unique
  machine     Machine @relation(fields: [machineId], references: [id])
}

model MachineTemplate {
  id            String @id @default(uuid())
  name          String
  description   String?
  cores         Int
  /// In GB
  ram           Int
  /// In GB
  storage       Int
  createdAt     DateTime @default(now())
  machines      Machine[]
}

model Application {
  id              String    @id @default(uuid())
  name            String
  description     String?
  version         String?
  url             String?
  icon            String?
  os              String[]
  installCommand  String[]
  createdAt       DateTime  @default(now())
  machines        MachineApplication[]
}

model MachineApplication {
  machineId     String
  applicationId String
  machine       Machine     @relation(fields: [machineId], references: [id])
  application   Application @relation(fields: [applicationId], references: [id])

  @@id([machineId, applicationId])
}

model Notification {
  id      String          @id @default(uuid())
  message String?
}

model Department {
  id            String   @id @default(uuid())
  name          String
  createdAt     DateTime @default(now())
  internetSpeed Int?     // in Mbps
  ipSubnet      String?
  machines      Machine[]
}
